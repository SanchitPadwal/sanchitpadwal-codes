<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="3" total="10" passed="5" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-08-27T10:23:56 IST" name="Suite" finished-at="2022-08-27T10:23:56 IST" duration-ms="411">
    <groups>
    </groups>
    <test started-at="2022-08-27T10:23:56 IST" name="Sanity Test" finished-at="2022-08-27T10:23:56 IST" duration-ms="181">
      <class name="Test.Sample">
        <test-method is-config="true" signature="BeforeClass()[pri:0, instance:Test.Sample@6e20b53a]" started-at="2022-08-27T10:23:56 IST" name="BeforeClass" finished-at="2022-08-27T10:23:56 IST" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method signature="ABC(int,int,java.lang.String)[pri:1, instance:Test.Sample@6e20b53a]" started-at="2022-08-27T10:23:56 IST" name="ABC" finished-at="2022-08-27T10:23:56 IST" duration-ms="25" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[30]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[padwal]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ABC -->
        <test-method signature="Test2(int,java.lang.String)[pri:2, instance:Test.Sample@6e20b53a]" started-at="2022-08-27T10:23:56 IST" name="Test2" finished-at="2022-08-27T10:23:56 IST" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[sanchit]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test2 -->
        <test-method is-config="true" signature="AfterClass()[pri:0, instance:Test.Sample@6e20b53a]" started-at="2022-08-27T10:23:56 IST" name="AfterClass" finished-at="2022-08-27T10:23:56 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- Test.Sample -->
    </test> <!-- Sanity Test -->
    <test started-at="2022-08-27T10:23:56 IST" name="Regression" finished-at="2022-08-27T10:23:56 IST" duration-ms="91">
      <class name="Test.Sample">
        <test-method is-config="true" signature="BeforeClass()[pri:0, instance:Test.Sample@158d2680]" started-at="2022-08-27T10:23:56 IST" name="BeforeClass" finished-at="2022-08-27T10:23:56 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method signature="AfterMethod()[pri:0, instance:Test.Sample@158d2680]" started-at="2022-08-27T10:23:56 IST" name="AfterMethod" finished-at="2022-08-27T10:23:56 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method signature="BeforeMethod()[pri:0, instance:Test.Sample@158d2680]" started-at="2022-08-27T10:23:56 IST" name="BeforeMethod" finished-at="2022-08-27T10:23:56 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="Test1()[pri:0, instance:Test.Sample@158d2680]" started-at="2022-08-27T10:23:56 IST" name="Test1" finished-at="2022-08-27T10:23:56 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test1 -->
        <test-method signature="ABC(int,int,java.lang.String)[pri:1, instance:Test.Sample@158d2680]" started-at="2022-08-27T10:23:56 IST" name="ABC" finished-at="2022-08-27T10:23:56 IST" duration-ms="0" status="FAIL">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Parameter 'a' is required by @Test on method ABC but has not been marked @Optional or defined
in G:\java work\SeleniumtestNG\TestNGxml\testng.xml]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Parameter 'a' is required by @Test on method ABC but has not been marked @Optional or defined
in G:\java work\SeleniumtestNG\TestNGxml\testng.xml
at org.testng.internal.Parameters.createParams(Parameters.java:267)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:355)
at org.testng.internal.Parameters.createParameters(Parameters.java:684)
at org.testng.internal.Parameters.handleParameters(Parameters.java:888)
at org.testng.internal.Parameters.handleParameters(Parameters.java:728)
at org.testng.internal.invokers.ParameterHandler.handleParameters(ParameterHandler.java:72)
at org.testng.internal.invokers.ParameterHandler.createParameters(ParameterHandler.java:51)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:917)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ABC -->
        <test-method signature="Test2(int,java.lang.String)[pri:2, instance:Test.Sample@158d2680]" started-at="2022-08-27T10:23:56 IST" name="Test2" finished-at="2022-08-27T10:23:56 IST" duration-ms="0" status="FAIL">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Parameter 'a' is required by @Test on method Test2 but has not been marked @Optional or defined
in G:\java work\SeleniumtestNG\TestNGxml\testng.xml]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Parameter 'a' is required by @Test on method Test2 but has not been marked @Optional or defined
in G:\java work\SeleniumtestNG\TestNGxml\testng.xml
at org.testng.internal.Parameters.createParams(Parameters.java:267)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:355)
at org.testng.internal.Parameters.createParameters(Parameters.java:684)
at org.testng.internal.Parameters.handleParameters(Parameters.java:888)
at org.testng.internal.Parameters.handleParameters(Parameters.java:728)
at org.testng.internal.invokers.ParameterHandler.handleParameters(ParameterHandler.java:72)
at org.testng.internal.invokers.ParameterHandler.createParameters(ParameterHandler.java:51)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:917)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test2 -->
        <test-method is-config="true" signature="AfterClass()[pri:0, instance:Test.Sample@158d2680]" started-at="2022-08-27T10:23:56 IST" name="AfterClass" finished-at="2022-08-27T10:23:56 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- Test.Sample -->
    </test> <!-- Regression -->
  </suite> <!-- Suite -->
</testng-results>
